/*
 * generated by Xtext 2.24.0
 */
grammar InternalTraceryLanguage;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package uk.ac.kcl.inf.languages.tracery.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package uk.ac.kcl.inf.languages.tracery.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import uk.ac.kcl.inf.languages.tracery.services.TraceryLanguageGrammarAccess;

}
@parser::members {
	private TraceryLanguageGrammarAccess grammarAccess;

	public void setGrammarAccess(TraceryLanguageGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleTraceryProgram
entryRuleTraceryProgram
:
{ before(grammarAccess.getTraceryProgramRule()); }
	 ruleTraceryProgram
{ after(grammarAccess.getTraceryProgramRule()); } 
	 EOF 
;

// Rule TraceryProgram
ruleTraceryProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTraceryProgramAccess().getGroup()); }
		(rule__TraceryProgram__Group__0)
		{ after(grammarAccess.getTraceryProgramAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFirstJSONStatements
entryRuleFirstJSONStatements
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getFirstJSONStatementsRule()); }
	 ruleFirstJSONStatements
{ after(grammarAccess.getFirstJSONStatementsRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule FirstJSONStatements
ruleFirstJSONStatements 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFirstJSONStatementsAccess().getGroup()); }
		(rule__FirstJSONStatements__Group__0)
		{ after(grammarAccess.getFirstJSONStatementsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleFirstJSONFinish
entryRuleFirstJSONFinish
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getFirstJSONFinishRule()); }
	 ruleFirstJSONFinish
{ after(grammarAccess.getFirstJSONFinishRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule FirstJSONFinish
ruleFirstJSONFinish 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFirstJSONFinishAccess().getGroup()); }
		(rule__FirstJSONFinish__Group__0)
		{ after(grammarAccess.getFirstJSONFinishAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleInitialVal
entryRuleInitialVal
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getInitialValRule()); }
	 ruleInitialVal
{ after(grammarAccess.getInitialValRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule InitialVal
ruleInitialVal 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitialValAccess().getGroup()); }
		(rule__InitialVal__Group__0)
		{ after(grammarAccess.getInitialValAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleInstruction
entryRuleInstruction
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getInstructionRule()); }
	 ruleInstruction
{ after(grammarAccess.getInstructionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Instruction
ruleInstruction 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstructionAccess().getGroup()); }
		(rule__Instruction__Group__0)
		{ after(grammarAccess.getInstructionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleInternalInstructions
entryRuleInternalInstructions
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getInternalInstructionsRule()); }
	 ruleInternalInstructions
{ after(grammarAccess.getInternalInstructionsRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule InternalInstructions
ruleInternalInstructions 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInternalInstructionsAccess().getAlternatives()); }
		(rule__InternalInstructions__Alternatives)
		{ after(grammarAccess.getInternalInstructionsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleInternalVals
entryRuleInternalVals
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getInternalValsRule()); }
	 ruleInternalVals
{ after(grammarAccess.getInternalValsRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule InternalVals
ruleInternalVals 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInternalValsAccess().getGroup()); }
		(rule__InternalVals__Group__0)
		{ after(grammarAccess.getInternalValsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleLastJSONFinish
entryRuleLastJSONFinish
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getLastJSONFinishRule()); }
	 ruleLastJSONFinish
{ after(grammarAccess.getLastJSONFinishRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule LastJSONFinish
ruleLastJSONFinish 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLastJSONFinishAccess().getGroup()); }
		(rule__LastJSONFinish__Group__0)
		{ after(grammarAccess.getLastJSONFinishAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleLastJSONStatement
entryRuleLastJSONStatement
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getLastJSONStatementRule()); }
	 ruleLastJSONStatement
{ after(grammarAccess.getLastJSONStatementRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule LastJSONStatement
ruleLastJSONStatement 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLastJSONStatementAccess().getGroup()); }
		(rule__LastJSONStatement__Group__0)
		{ after(grammarAccess.getLastJSONStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleStandardVal
entryRuleStandardVal
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getStandardValRule()); }
	 ruleStandardVal
{ after(grammarAccess.getStandardValRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule StandardVal
ruleStandardVal 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStandardValAccess().getGroup()); }
		(rule__StandardVal__Group__0)
		{ after(grammarAccess.getStandardValAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleStringDeclaration
entryRuleStringDeclaration
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getStringDeclarationRule()); }
	 ruleStringDeclaration
{ after(grammarAccess.getStringDeclarationRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule StringDeclaration
ruleStringDeclaration 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringDeclarationAccess().getValueAssignment()); }
		(rule__StringDeclaration__ValueAssignment)
		{ after(grammarAccess.getStringDeclarationAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getVariableDeclarationRule()); }
	 ruleVariableDeclaration
{ after(grammarAccess.getVariableDeclarationRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule VariableDeclaration
ruleVariableDeclaration 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getGroup()); }
		(rule__VariableDeclaration__Group__0)
		{ after(grammarAccess.getVariableDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

rule__InternalInstructions__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInternalInstructionsAccess().getVariableDeclarationParserRuleCall_0()); }
		ruleVariableDeclaration
		{ after(grammarAccess.getInternalInstructionsAccess().getVariableDeclarationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getInternalInstructionsAccess().getStringDeclarationParserRuleCall_1()); }
		ruleStringDeclaration
		{ after(grammarAccess.getInternalInstructionsAccess().getStringDeclarationParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceryProgram__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TraceryProgram__Group__0__Impl
	rule__TraceryProgram__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceryProgram__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTraceryProgramAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getTraceryProgramAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceryProgram__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TraceryProgram__Group__1__Impl
	rule__TraceryProgram__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceryProgram__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTraceryProgramAccess().getInstructionsAssignment_1()); }
	(rule__TraceryProgram__InstructionsAssignment_1)
	{ after(grammarAccess.getTraceryProgramAccess().getInstructionsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceryProgram__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TraceryProgram__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceryProgram__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTraceryProgramAccess().getRightCurlyBracketKeyword_2()); }
	'}'
	{ after(grammarAccess.getTraceryProgramAccess().getRightCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FirstJSONStatements__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FirstJSONStatements__Group__0__Impl
	rule__FirstJSONStatements__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstJSONStatements__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFirstJSONStatementsAccess().getAmpersandKeyword_0()); }
	'&'
	{ after(grammarAccess.getFirstJSONStatementsAccess().getAmpersandKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstJSONStatements__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FirstJSONStatements__Group__1__Impl
	rule__FirstJSONStatements__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstJSONStatements__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFirstJSONStatementsAccess().getNameAssignment_1()); }
	(rule__FirstJSONStatements__NameAssignment_1)
	{ after(grammarAccess.getFirstJSONStatementsAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstJSONStatements__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FirstJSONStatements__Group__2__Impl
	rule__FirstJSONStatements__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstJSONStatements__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFirstJSONStatementsAccess().getAmpersandKeyword_2()); }
	'&'
	{ after(grammarAccess.getFirstJSONStatementsAccess().getAmpersandKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstJSONStatements__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FirstJSONStatements__Group__3__Impl
	rule__FirstJSONStatements__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstJSONStatements__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFirstJSONStatementsAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getFirstJSONStatementsAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstJSONStatements__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FirstJSONStatements__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstJSONStatements__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFirstJSONStatementsAccess().getValueAssignment_4()); }
	(rule__FirstJSONStatements__ValueAssignment_4)
	{ after(grammarAccess.getFirstJSONStatementsAccess().getValueAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FirstJSONFinish__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FirstJSONFinish__Group__0__Impl
	rule__FirstJSONFinish__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstJSONFinish__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFirstJSONFinishAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getFirstJSONFinishAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstJSONFinish__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FirstJSONFinish__Group__1__Impl
	rule__FirstJSONFinish__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstJSONFinish__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFirstJSONFinishAccess().getInternalValsParserRuleCall_1()); }
	ruleInternalVals
	{ after(grammarAccess.getFirstJSONFinishAccess().getInternalValsParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstJSONFinish__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FirstJSONFinish__Group__2__Impl
	rule__FirstJSONFinish__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstJSONFinish__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFirstJSONFinishAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getFirstJSONFinishAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstJSONFinish__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FirstJSONFinish__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstJSONFinish__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFirstJSONFinishAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getFirstJSONFinishAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InitialVal__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialVal__Group__0__Impl
	rule__InitialVal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialVal__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialValAccess().getAmpersandKeyword_0()); }
	'&'
	{ after(grammarAccess.getInitialValAccess().getAmpersandKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialVal__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialVal__Group__1__Impl
	rule__InitialVal__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialVal__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getInitialValAccess().getValInternalInstructionAssignment_1()); }
		(rule__InitialVal__ValInternalInstructionAssignment_1)
		{ after(grammarAccess.getInitialValAccess().getValInternalInstructionAssignment_1()); }
	)
	(
		{ before(grammarAccess.getInitialValAccess().getValInternalInstructionAssignment_1()); }
		(rule__InitialVal__ValInternalInstructionAssignment_1)*
		{ after(grammarAccess.getInitialValAccess().getValInternalInstructionAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialVal__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialVal__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialVal__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialValAccess().getAmpersandKeyword_2()); }
	'&'
	{ after(grammarAccess.getInitialValAccess().getAmpersandKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Instruction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instruction__Group__0__Impl
	rule__Instruction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionAccess().getFirstInstructionAssignment_0()); }
	(rule__Instruction__FirstInstructionAssignment_0)*
	{ after(grammarAccess.getInstructionAccess().getFirstInstructionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instruction__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionAccess().getLastInstructionAssignment_1()); }
	(rule__Instruction__LastInstructionAssignment_1)
	{ after(grammarAccess.getInstructionAccess().getLastInstructionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InternalVals__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InternalVals__Group__0__Impl
	rule__InternalVals__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InternalVals__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInternalValsAccess().getInitialValParserRuleCall_0()); }
	ruleInitialVal
	{ after(grammarAccess.getInternalValsAccess().getInitialValParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InternalVals__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InternalVals__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InternalVals__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInternalValsAccess().getValsAssignment_1()); }
	(rule__InternalVals__ValsAssignment_1)*
	{ after(grammarAccess.getInternalValsAccess().getValsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LastJSONFinish__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LastJSONFinish__Group__0__Impl
	rule__LastJSONFinish__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LastJSONFinish__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLastJSONFinishAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getLastJSONFinishAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LastJSONFinish__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LastJSONFinish__Group__1__Impl
	rule__LastJSONFinish__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LastJSONFinish__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLastJSONFinishAccess().getInitialValParserRuleCall_1()); }
	ruleInitialVal
	{ after(grammarAccess.getLastJSONFinishAccess().getInitialValParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LastJSONFinish__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LastJSONFinish__Group__2__Impl
	rule__LastJSONFinish__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LastJSONFinish__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLastJSONFinishAccess().getValsAssignment_2()); }
	(rule__LastJSONFinish__ValsAssignment_2)*
	{ after(grammarAccess.getLastJSONFinishAccess().getValsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LastJSONFinish__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LastJSONFinish__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LastJSONFinish__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLastJSONFinishAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getLastJSONFinishAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LastJSONStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LastJSONStatement__Group__0__Impl
	rule__LastJSONStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LastJSONStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLastJSONStatementAccess().getOriginKeyword_0()); }
	'&origin&'
	{ after(grammarAccess.getLastJSONStatementAccess().getOriginKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LastJSONStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LastJSONStatement__Group__1__Impl
	rule__LastJSONStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LastJSONStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLastJSONStatementAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getLastJSONStatementAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LastJSONStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LastJSONStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LastJSONStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLastJSONStatementAccess().getValueAssignment_2()); }
	(rule__LastJSONStatement__ValueAssignment_2)
	{ after(grammarAccess.getLastJSONStatementAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StandardVal__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardVal__Group__0__Impl
	rule__StandardVal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardVal__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardValAccess().getCommaKeyword_0()); }
	','
	{ after(grammarAccess.getStandardValAccess().getCommaKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardVal__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardVal__Group__1__Impl
	rule__StandardVal__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardVal__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardValAccess().getAmpersandKeyword_1()); }
	'&'
	{ after(grammarAccess.getStandardValAccess().getAmpersandKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardVal__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardVal__Group__2__Impl
	rule__StandardVal__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardVal__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getStandardValAccess().getValInternalInstructionAssignment_2()); }
		(rule__StandardVal__ValInternalInstructionAssignment_2)
		{ after(grammarAccess.getStandardValAccess().getValInternalInstructionAssignment_2()); }
	)
	(
		{ before(grammarAccess.getStandardValAccess().getValInternalInstructionAssignment_2()); }
		(rule__StandardVal__ValInternalInstructionAssignment_2)*
		{ after(grammarAccess.getStandardValAccess().getValInternalInstructionAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardVal__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StandardVal__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardVal__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStandardValAccess().getAmpersandKeyword_3()); }
	'&'
	{ after(grammarAccess.getStandardValAccess().getAmpersandKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__0__Impl
	rule__VariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getNumberSignKeyword_0()); }
	'#'
	{ after(grammarAccess.getVariableDeclarationAccess().getNumberSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__1__Impl
	rule__VariableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getVariableAssignment_1()); }
	(rule__VariableDeclaration__VariableAssignment_1)
	{ after(grammarAccess.getVariableDeclarationAccess().getVariableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getNumberSignKeyword_2()); }
	'#'
	{ after(grammarAccess.getVariableDeclarationAccess().getNumberSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TraceryProgram__InstructionsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTraceryProgramAccess().getInstructionsInstructionParserRuleCall_1_0()); }
		ruleInstruction
		{ after(grammarAccess.getTraceryProgramAccess().getInstructionsInstructionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstJSONStatements__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFirstJSONStatementsAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFirstJSONStatementsAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstJSONStatements__ValueAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFirstJSONStatementsAccess().getValueFirstJSONFinishParserRuleCall_4_0()); }
		ruleFirstJSONFinish
		{ after(grammarAccess.getFirstJSONStatementsAccess().getValueFirstJSONFinishParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialVal__ValInternalInstructionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitialValAccess().getValInternalInstructionInternalInstructionsParserRuleCall_1_0()); }
		ruleInternalInstructions
		{ after(grammarAccess.getInitialValAccess().getValInternalInstructionInternalInstructionsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__FirstInstructionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getFirstInstructionFirstJSONStatementsParserRuleCall_0_0()); }
		ruleFirstJSONStatements
		{ after(grammarAccess.getInstructionAccess().getFirstInstructionFirstJSONStatementsParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__LastInstructionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getLastInstructionLastJSONStatementParserRuleCall_1_0()); }
		ruleLastJSONStatement
		{ after(grammarAccess.getInstructionAccess().getLastInstructionLastJSONStatementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InternalVals__ValsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInternalValsAccess().getValsStandardValParserRuleCall_1_0()); }
		ruleStandardVal
		{ after(grammarAccess.getInternalValsAccess().getValsStandardValParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LastJSONFinish__ValsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLastJSONFinishAccess().getValsStandardValParserRuleCall_2_0()); }
		ruleStandardVal
		{ after(grammarAccess.getLastJSONFinishAccess().getValsStandardValParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LastJSONStatement__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLastJSONStatementAccess().getValueLastJSONFinishParserRuleCall_2_0()); }
		ruleLastJSONFinish
		{ after(grammarAccess.getLastJSONStatementAccess().getValueLastJSONFinishParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardVal__ValInternalInstructionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandardValAccess().getValInternalInstructionInternalInstructionsParserRuleCall_2_0()); }
		ruleInternalInstructions
		{ after(grammarAccess.getStandardValAccess().getValInternalInstructionInternalInstructionsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringDeclaration__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringDeclarationAccess().getValueSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getStringDeclarationAccess().getValueSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getVariableFirstJSONStatementsCrossReference_1_0()); }
		(
			{ before(grammarAccess.getVariableDeclarationAccess().getVariableFirstJSONStatementsIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getVariableDeclarationAccess().getVariableFirstJSONStatementsIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getVariableDeclarationAccess().getVariableFirstJSONStatementsCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;

/**
 * generated by Xtext 2.24.0
 */
package uk.ac.kcl.inf.languages.tracery.traceryLanguage.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import uk.ac.kcl.inf.languages.tracery.traceryLanguage.StartingJSONStatement;
import uk.ac.kcl.inf.languages.tracery.traceryLanguage.TraceryLanguagePackage;
import uk.ac.kcl.inf.languages.tracery.traceryLanguage.initialValue;
import uk.ac.kcl.inf.languages.tracery.traceryLanguage.standardValue;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Starting JSON Statement</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link uk.ac.kcl.inf.languages.tracery.traceryLanguage.impl.StartingJSONStatementImpl#getInitialValues <em>Initial Values</em>}</li>
 *   <li>{@link uk.ac.kcl.inf.languages.tracery.traceryLanguage.impl.StartingJSONStatementImpl#getStandardValues <em>Standard Values</em>}</li>
 * </ul>
 *
 * @generated
 */
public class StartingJSONStatementImpl extends MinimalEObjectImpl.Container implements StartingJSONStatement
{
  /**
   * The cached value of the '{@link #getInitialValues() <em>Initial Values</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInitialValues()
   * @generated
   * @ordered
   */
  protected EList<initialValue> initialValues;

  /**
   * The cached value of the '{@link #getStandardValues() <em>Standard Values</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStandardValues()
   * @generated
   * @ordered
   */
  protected EList<standardValue> standardValues;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected StartingJSONStatementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return TraceryLanguagePackage.Literals.STARTING_JSON_STATEMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<initialValue> getInitialValues()
  {
    if (initialValues == null)
    {
      initialValues = new EObjectContainmentEList<initialValue>(initialValue.class, this, TraceryLanguagePackage.STARTING_JSON_STATEMENT__INITIAL_VALUES);
    }
    return initialValues;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<standardValue> getStandardValues()
  {
    if (standardValues == null)
    {
      standardValues = new EObjectContainmentEList<standardValue>(standardValue.class, this, TraceryLanguagePackage.STARTING_JSON_STATEMENT__STANDARD_VALUES);
    }
    return standardValues;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case TraceryLanguagePackage.STARTING_JSON_STATEMENT__INITIAL_VALUES:
        return ((InternalEList<?>)getInitialValues()).basicRemove(otherEnd, msgs);
      case TraceryLanguagePackage.STARTING_JSON_STATEMENT__STANDARD_VALUES:
        return ((InternalEList<?>)getStandardValues()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case TraceryLanguagePackage.STARTING_JSON_STATEMENT__INITIAL_VALUES:
        return getInitialValues();
      case TraceryLanguagePackage.STARTING_JSON_STATEMENT__STANDARD_VALUES:
        return getStandardValues();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case TraceryLanguagePackage.STARTING_JSON_STATEMENT__INITIAL_VALUES:
        getInitialValues().clear();
        getInitialValues().addAll((Collection<? extends initialValue>)newValue);
        return;
      case TraceryLanguagePackage.STARTING_JSON_STATEMENT__STANDARD_VALUES:
        getStandardValues().clear();
        getStandardValues().addAll((Collection<? extends standardValue>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case TraceryLanguagePackage.STARTING_JSON_STATEMENT__INITIAL_VALUES:
        getInitialValues().clear();
        return;
      case TraceryLanguagePackage.STARTING_JSON_STATEMENT__STANDARD_VALUES:
        getStandardValues().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case TraceryLanguagePackage.STARTING_JSON_STATEMENT__INITIAL_VALUES:
        return initialValues != null && !initialValues.isEmpty();
      case TraceryLanguagePackage.STARTING_JSON_STATEMENT__STANDARD_VALUES:
        return standardValues != null && !standardValues.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //StartingJSONStatementImpl

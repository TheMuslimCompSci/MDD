/**
 * generated by Xtext 2.24.0
 */
package uk.ac.kcl.inf.languages.tracery.traceryLanguage.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import uk.ac.kcl.inf.languages.tracery.traceryLanguage.FirstJSONStatements;
import uk.ac.kcl.inf.languages.tracery.traceryLanguage.Instruction;
import uk.ac.kcl.inf.languages.tracery.traceryLanguage.LastJSONStatement;
import uk.ac.kcl.inf.languages.tracery.traceryLanguage.TraceryLanguagePackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Instruction</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link uk.ac.kcl.inf.languages.tracery.traceryLanguage.impl.InstructionImpl#getFirstInstruction <em>First Instruction</em>}</li>
 *   <li>{@link uk.ac.kcl.inf.languages.tracery.traceryLanguage.impl.InstructionImpl#getLastInstruction <em>Last Instruction</em>}</li>
 * </ul>
 *
 * @generated
 */
public class InstructionImpl extends MinimalEObjectImpl.Container implements Instruction
{
  /**
   * The cached value of the '{@link #getFirstInstruction() <em>First Instruction</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFirstInstruction()
   * @generated
   * @ordered
   */
  protected EList<FirstJSONStatements> firstInstruction;

  /**
   * The cached value of the '{@link #getLastInstruction() <em>Last Instruction</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLastInstruction()
   * @generated
   * @ordered
   */
  protected LastJSONStatement lastInstruction;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected InstructionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return TraceryLanguagePackage.Literals.INSTRUCTION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<FirstJSONStatements> getFirstInstruction()
  {
    if (firstInstruction == null)
    {
      firstInstruction = new EObjectContainmentEList<FirstJSONStatements>(FirstJSONStatements.class, this, TraceryLanguagePackage.INSTRUCTION__FIRST_INSTRUCTION);
    }
    return firstInstruction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LastJSONStatement getLastInstruction()
  {
    return lastInstruction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLastInstruction(LastJSONStatement newLastInstruction, NotificationChain msgs)
  {
    LastJSONStatement oldLastInstruction = lastInstruction;
    lastInstruction = newLastInstruction;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TraceryLanguagePackage.INSTRUCTION__LAST_INSTRUCTION, oldLastInstruction, newLastInstruction);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLastInstruction(LastJSONStatement newLastInstruction)
  {
    if (newLastInstruction != lastInstruction)
    {
      NotificationChain msgs = null;
      if (lastInstruction != null)
        msgs = ((InternalEObject)lastInstruction).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TraceryLanguagePackage.INSTRUCTION__LAST_INSTRUCTION, null, msgs);
      if (newLastInstruction != null)
        msgs = ((InternalEObject)newLastInstruction).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TraceryLanguagePackage.INSTRUCTION__LAST_INSTRUCTION, null, msgs);
      msgs = basicSetLastInstruction(newLastInstruction, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TraceryLanguagePackage.INSTRUCTION__LAST_INSTRUCTION, newLastInstruction, newLastInstruction));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case TraceryLanguagePackage.INSTRUCTION__FIRST_INSTRUCTION:
        return ((InternalEList<?>)getFirstInstruction()).basicRemove(otherEnd, msgs);
      case TraceryLanguagePackage.INSTRUCTION__LAST_INSTRUCTION:
        return basicSetLastInstruction(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case TraceryLanguagePackage.INSTRUCTION__FIRST_INSTRUCTION:
        return getFirstInstruction();
      case TraceryLanguagePackage.INSTRUCTION__LAST_INSTRUCTION:
        return getLastInstruction();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case TraceryLanguagePackage.INSTRUCTION__FIRST_INSTRUCTION:
        getFirstInstruction().clear();
        getFirstInstruction().addAll((Collection<? extends FirstJSONStatements>)newValue);
        return;
      case TraceryLanguagePackage.INSTRUCTION__LAST_INSTRUCTION:
        setLastInstruction((LastJSONStatement)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case TraceryLanguagePackage.INSTRUCTION__FIRST_INSTRUCTION:
        getFirstInstruction().clear();
        return;
      case TraceryLanguagePackage.INSTRUCTION__LAST_INSTRUCTION:
        setLastInstruction((LastJSONStatement)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case TraceryLanguagePackage.INSTRUCTION__FIRST_INSTRUCTION:
        return firstInstruction != null && !firstInstruction.isEmpty();
      case TraceryLanguagePackage.INSTRUCTION__LAST_INSTRUCTION:
        return lastInstruction != null;
    }
    return super.eIsSet(featureID);
  }

} //InstructionImpl
